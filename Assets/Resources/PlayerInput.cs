//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.6.3
//     from Assets/Resources/PlayerInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInput: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInput"",
    ""maps"": [
        {
            ""name"": ""Teacher"",
            ""id"": ""50ca38ff-464b-4745-99b8-70854c2f36bb"",
            ""actions"": [
                {
                    ""name"": ""PlayPause"",
                    ""type"": ""Button"",
                    ""id"": ""1ddf59b9-fa92-4248-b532-d786971d0909"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Forward"",
                    ""type"": ""Button"",
                    ""id"": ""ac669a82-6c59-438b-8ae8-c62f732439be"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Back"",
                    ""type"": ""Button"",
                    ""id"": ""d20f750a-08e1-4f4a-82fc-12a816c02ea8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""OnOffSound"",
                    ""type"": ""Button"",
                    ""id"": ""6af271d2-ca2e-4511-98ac-aabbab1fe6ab"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""OpenClose"",
                    ""type"": ""Button"",
                    ""id"": ""cfc86955-2686-44a4-9add-f505f3c6d459"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""PlusSound"",
                    ""type"": ""Button"",
                    ""id"": ""0c471fcd-196b-4e94-9eba-786e79319731"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MinusSound"",
                    ""type"": ""Button"",
                    ""id"": ""0a410812-c1ed-4ca3-9784-53487bb1ef8f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Zoom"",
                    ""type"": ""Button"",
                    ""id"": ""1b44707b-779f-4baa-b520-0c4fed9571dd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""054bc134-5cf8-426f-97d3-04bf38faab99"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayPause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""628e6422-8a7a-460a-88c7-06b24dbc0c15"",
                    ""path"": ""<Keyboard>/pageUp"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayPause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""38b487d1-3048-40c7-b8f8-6a6001afb882"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Forward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7bf7a855-af99-4c78-9642-665872d6a436"",
                    ""path"": ""<Keyboard>/pageDown"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Forward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""96461f27-525d-4ed3-b836-16ba662e8618"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c8a323c2-5791-49d7-ab7f-fb5fc38321f6"",
                    ""path"": ""<Keyboard>/pageUp"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9420426f-fa8b-4219-a0f5-2fbcaebe7485"",
                    ""path"": ""<Keyboard>/m"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OnOffSound"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""87fc93ec-57bb-40e3-b2b6-cd27a2e41ce6"",
                    ""path"": ""<Keyboard>/pageDown"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OpenClose"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6432909d-c18d-4792-8776-784e4e49a783"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlusSound"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a07eec68-7e92-430e-8f46-0c64b37a1227"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MinusSound"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0055e9cd-71ae-48cc-85e0-619f55ce555d"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Zoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Teacher
        m_Teacher = asset.FindActionMap("Teacher", throwIfNotFound: true);
        m_Teacher_PlayPause = m_Teacher.FindAction("PlayPause", throwIfNotFound: true);
        m_Teacher_Forward = m_Teacher.FindAction("Forward", throwIfNotFound: true);
        m_Teacher_Back = m_Teacher.FindAction("Back", throwIfNotFound: true);
        m_Teacher_OnOffSound = m_Teacher.FindAction("OnOffSound", throwIfNotFound: true);
        m_Teacher_OpenClose = m_Teacher.FindAction("OpenClose", throwIfNotFound: true);
        m_Teacher_PlusSound = m_Teacher.FindAction("PlusSound", throwIfNotFound: true);
        m_Teacher_MinusSound = m_Teacher.FindAction("MinusSound", throwIfNotFound: true);
        m_Teacher_Zoom = m_Teacher.FindAction("Zoom", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Teacher
    private readonly InputActionMap m_Teacher;
    private List<ITeacherActions> m_TeacherActionsCallbackInterfaces = new List<ITeacherActions>();
    private readonly InputAction m_Teacher_PlayPause;
    private readonly InputAction m_Teacher_Forward;
    private readonly InputAction m_Teacher_Back;
    private readonly InputAction m_Teacher_OnOffSound;
    private readonly InputAction m_Teacher_OpenClose;
    private readonly InputAction m_Teacher_PlusSound;
    private readonly InputAction m_Teacher_MinusSound;
    private readonly InputAction m_Teacher_Zoom;
    public struct TeacherActions
    {
        private @PlayerInput m_Wrapper;
        public TeacherActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @PlayPause => m_Wrapper.m_Teacher_PlayPause;
        public InputAction @Forward => m_Wrapper.m_Teacher_Forward;
        public InputAction @Back => m_Wrapper.m_Teacher_Back;
        public InputAction @OnOffSound => m_Wrapper.m_Teacher_OnOffSound;
        public InputAction @OpenClose => m_Wrapper.m_Teacher_OpenClose;
        public InputAction @PlusSound => m_Wrapper.m_Teacher_PlusSound;
        public InputAction @MinusSound => m_Wrapper.m_Teacher_MinusSound;
        public InputAction @Zoom => m_Wrapper.m_Teacher_Zoom;
        public InputActionMap Get() { return m_Wrapper.m_Teacher; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(TeacherActions set) { return set.Get(); }
        public void AddCallbacks(ITeacherActions instance)
        {
            if (instance == null || m_Wrapper.m_TeacherActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_TeacherActionsCallbackInterfaces.Add(instance);
            @PlayPause.started += instance.OnPlayPause;
            @PlayPause.performed += instance.OnPlayPause;
            @PlayPause.canceled += instance.OnPlayPause;
            @Forward.started += instance.OnForward;
            @Forward.performed += instance.OnForward;
            @Forward.canceled += instance.OnForward;
            @Back.started += instance.OnBack;
            @Back.performed += instance.OnBack;
            @Back.canceled += instance.OnBack;
            @OnOffSound.started += instance.OnOnOffSound;
            @OnOffSound.performed += instance.OnOnOffSound;
            @OnOffSound.canceled += instance.OnOnOffSound;
            @OpenClose.started += instance.OnOpenClose;
            @OpenClose.performed += instance.OnOpenClose;
            @OpenClose.canceled += instance.OnOpenClose;
            @PlusSound.started += instance.OnPlusSound;
            @PlusSound.performed += instance.OnPlusSound;
            @PlusSound.canceled += instance.OnPlusSound;
            @MinusSound.started += instance.OnMinusSound;
            @MinusSound.performed += instance.OnMinusSound;
            @MinusSound.canceled += instance.OnMinusSound;
            @Zoom.started += instance.OnZoom;
            @Zoom.performed += instance.OnZoom;
            @Zoom.canceled += instance.OnZoom;
        }

        private void UnregisterCallbacks(ITeacherActions instance)
        {
            @PlayPause.started -= instance.OnPlayPause;
            @PlayPause.performed -= instance.OnPlayPause;
            @PlayPause.canceled -= instance.OnPlayPause;
            @Forward.started -= instance.OnForward;
            @Forward.performed -= instance.OnForward;
            @Forward.canceled -= instance.OnForward;
            @Back.started -= instance.OnBack;
            @Back.performed -= instance.OnBack;
            @Back.canceled -= instance.OnBack;
            @OnOffSound.started -= instance.OnOnOffSound;
            @OnOffSound.performed -= instance.OnOnOffSound;
            @OnOffSound.canceled -= instance.OnOnOffSound;
            @OpenClose.started -= instance.OnOpenClose;
            @OpenClose.performed -= instance.OnOpenClose;
            @OpenClose.canceled -= instance.OnOpenClose;
            @PlusSound.started -= instance.OnPlusSound;
            @PlusSound.performed -= instance.OnPlusSound;
            @PlusSound.canceled -= instance.OnPlusSound;
            @MinusSound.started -= instance.OnMinusSound;
            @MinusSound.performed -= instance.OnMinusSound;
            @MinusSound.canceled -= instance.OnMinusSound;
            @Zoom.started -= instance.OnZoom;
            @Zoom.performed -= instance.OnZoom;
            @Zoom.canceled -= instance.OnZoom;
        }

        public void RemoveCallbacks(ITeacherActions instance)
        {
            if (m_Wrapper.m_TeacherActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ITeacherActions instance)
        {
            foreach (var item in m_Wrapper.m_TeacherActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_TeacherActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public TeacherActions @Teacher => new TeacherActions(this);
    public interface ITeacherActions
    {
        void OnPlayPause(InputAction.CallbackContext context);
        void OnForward(InputAction.CallbackContext context);
        void OnBack(InputAction.CallbackContext context);
        void OnOnOffSound(InputAction.CallbackContext context);
        void OnOpenClose(InputAction.CallbackContext context);
        void OnPlusSound(InputAction.CallbackContext context);
        void OnMinusSound(InputAction.CallbackContext context);
        void OnZoom(InputAction.CallbackContext context);
    }
}
